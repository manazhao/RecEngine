#!/usr/bin/perl
# extract all features given an item
#
use strict;
use warnings;
use Getopt::Long;

my $keep_pattern_list;
my $dict_file;

GetOptions("pat=s" => \$keep_pattern_list, "dict=s" => \$dict_file) or die $!;

($keep_pattern_list) or die "regex list for features to remain musth be specified: $!";
($dict_file  && -f $dict_file) or die "feature dictionary file must be provided and exist: $!";

my @pattern_list = split /\s+/, $keep_pattern_list;

# which features will be kept
my %feat_map = ();
open DICT_FILE, "<", $dict_file or die "failed to open - $dict_file: $!";
while(<DICT_FILE>){

}


while(<STDIN>){
	chomp;
	my ($entity_id, @features) = split /\,/;
	# get all features, detect duplication
	my %feat_map = ();
	foreach my $feature (@features){
		my ($fid,$val) = split /\:/, $feature;
		exists $feat_map{$fid} and die "duplicate feature - $fid: $!";
		print $fid . "\n";
	}	
}
